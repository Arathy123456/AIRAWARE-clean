const AQIMap={map:null,coverageCircles:{},markers:{},isOtpVerified:!!window.djangoData&&window.djangoData.isOtpVerified,userLocationMarker:null,userLocationCircle:null,isTrackingLocation:!1,isCoverageVisible:!1,maxDistanceForData:5e3,isPanelCollapsed:!1,sensorLocations:{"lora-v1":{lat:10.184732819803031,lng:76.42155513804967,name:"Adi Shankara Institute"},loradev2:{lat:10.182241040102275,lng:76.42848375338185,name:"Mattoor Junction-Pothiyakkara Road, Mattoor, Kalady"},location2:{lat:10.172,lng:76.432,name:"Location 2"},location3:{lat:10.175,lng:76.435,name:"Location 3"},location4:{lat:10.169,lng:76.44,name:"Location 4"}},sensorData:{},forecastData:null,currentParameter:"pm25",WHO_LIMITS:{co:4,so2:40,pm25:15,pm10:45,no2:28,o3:64,nh3:200},IDW:{calculateDistance:function(t,e,a,o){const i=(a-t)*Math.PI/180,n=(o-e)*Math.PI/180,s=Math.sin(i/2)*Math.sin(i/2)+Math.cos(t*Math.PI/180)*Math.cos(a*Math.PI/180)*Math.sin(n/2)*Math.sin(n/2);return 6371*(2*Math.atan2(Math.sqrt(s),Math.sqrt(1-s)))},interpolateParameter:function(t,e,a,o,i=2){let n=0,s=0,r=1/0,l=null;const c=[];for(const[i,n]of Object.entries(AQIMap.sensorLocations))if(a[i]&&void 0!==a[i][o]){const s=this.calculateDistance(t,e,n.lat,n.lng);if(s<.001){l=a[i][o];break}c.push({id:i,value:a[i][o],distance:s,location:n}),r=Math.min(r,s)}if(null!==l)return{value:l,confidence:1,method:"exact",sensorsUsed:1};if(0===c.length)return{value:null,confidence:0,method:"no_data",sensorsUsed:0};if(1===c.length){const t=c[0],e=Math.max(0,1-t.distance/10);return{value:t.value,confidence:e,method:"single_sensor",sensorsUsed:1,nearestDistance:t.distance}}for(const t of c){const e=1/Math.pow(t.distance,i);n+=t.value*e,s+=e}const d=n/s,u=c.reduce(((t,e)=>t+e.distance),0)/c.length,h=Math.max(0,Math.min(1,1-u/15));return{value:Math.round(100*d)/100,confidence:h,method:"idw",sensorsUsed:c.length,nearestDistance:r,avgDistance:u}},interpolateAllParameters:function(t,e,a){const o=["pm25","pm10","so2","o3","co","no2","nh3"],i={};let n=0,s=0;for(const r of o){const o=this.interpolateParameter(t,e,a,r);i[r]=o,null!==o.value&&(n+=o.confidence,s++)}let r=0;for(const t of o)if(null!==i[t].value){const e=AQIMap.calculateSubIndex(t,i[t].value);r=Math.max(r,e)}return i.aqi={value:Math.round(r),confidence:s>0?n/s:0,method:"calculated",sensorsUsed:Math.max(...Object.values(i).map((t=>t.sensorsUsed||0)))},i}},calculateSubIndex:function(t,e){const a={pm25:[[0,12,0,50],[12.1,35.4,51,100],[35.5,55.4,101,150],[55.5,150.4,151,200],[150.5,250.4,201,300],[250.5,500,301,500]],pm10:[[0,54,0,50],[55,154,51,100],[155,254,101,150],[255,354,151,200],[355,424,201,300],[425,604,301,500]],so2:[[0,35,0,50],[36,75,51,100],[76,185,101,150],[186,304,151,200],[305,604,201,300],[605,1004,301,500]],no2:[[0,53,0,50],[54,100,51,100],[101,360,101,150],[361,649,151,200],[650,1249,201,300],[1250,2049,301,500]],o3:[[0,54,0,50],[55,70,51,100],[71,85,101,150],[86,105,151,200],[106,200,201,300]],co:[[0,4.4,0,50],[4.5,9.4,51,100],[9.5,12.4,101,150],[12.5,15.4,151,200],[15.5,30.4,201,300],[30.5,50.4,301,500]],nh3:[[0,200,0,50],[201,400,51,100],[401,800,101,150],[801,1200,151,200],[1201,1800,201,300],[1801,3e3,301,500]]}[t];if(!a)return 50;for(const t of a)if(e>=t[0]&&e<=t[1]){const a=t[2],o=t[3],i=t[0];return(o-a)/(t[1]-i)*(e-i)+a}return 500},init:function(){this.map||(this.map=L.map("map").setView([10.184732819803031,76.42155513804967],10),L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:"© OpenStreetMap contributors"}).addTo(this.map),this.initializeMarkers(),this.addMapControls(),this.initForecastChart(),this.initModalHandlers(),this.initResponsiveUI()),this.fetchSensorData(),setInterval((()=>this.fetchSensorData()),5e4),window.addEventListener("resize",this.handleWindowResize.bind(this)),this.handleWindowResize()},initResponsiveUI:function(){document.getElementById("panel-toggle-btn").addEventListener("click",(()=>{this.toggleDetailsPanel()})),document.getElementById("expand-panel-btn").addEventListener("click",(()=>{this.toggleDetailsPanel()}));const t=document.getElementById("details-panel"),e=document.getElementById("expand-panel-btn");window.innerWidth<768&&(t.classList.add("collapsed"),e.style.display="block",this.isPanelCollapsed=!0,setTimeout((()=>{this.map.invalidateSize()}),300))},handleWindowResize:function(){const t=document.getElementById("details-panel"),e=document.getElementById("expand-panel-btn");window.innerWidth<768?(e.style.display="block",this.isPanelCollapsed||(t.classList.add("collapsed"),this.isPanelCollapsed=!0)):(e.style.display="none",t.classList.remove("collapsed"),this.isPanelCollapsed=!1),setTimeout((()=>{this.map.invalidateSize()}),100)},toggleDetailsPanel:function(){const t=document.getElementById("details-panel"),e=document.getElementById("expand-panel-btn");this.isPanelCollapsed?(t.classList.remove("collapsed"),window.innerWidth>=768?e.innerHTML='<i class="fas fa-chevron-right"></i>':e.innerHTML='<i class="fas fa-chevron-down"></i>'):(t.classList.add("collapsed"),window.innerWidth>=768?e.innerHTML='<i class="fas fa-chevron-left"></i>':e.innerHTML='<i class="fas fa-chevron-up"></i>'),this.isPanelCollapsed=!this.isPanelCollapsed,setTimeout((()=>{this.map.invalidateSize()}),300)},initializeMarkers:function(){for(const[t,e]of Object.entries(this.sensorLocations)){const a=L.marker([e.lat,e.lng]).addTo(this.map);a.bindPopup(`<strong>${e.name}</strong><br>Loading data...`),a.on("click",(()=>{this.handleMarkerClick(t)})),this.markers[t]=a;const o=L.circle([e.lat,e.lng],{radius:this.maxDistanceForData,color:"#4361ee",fillColor:"#4361ee",fillOpacity:.05,weight:1.5,dashArray:"5, 5",className:"coverage-circle"});this.coverageCircles[t]=o}},handleMarkerClick:function(t){const e=this.sensorLocations[t];this.map.setView([e.lat,e.lng],16),this.isPanelCollapsed&&this.toggleDetailsPanel(),this.updateUIWithLocationData(t),this.updateMarkerPopup(t),this.markers[t].openPopup()},updateMarkerPopup:function(t){const e=this.sensorData[t],a=this.sensorLocations[t];if(!e)return void this.markers[t].setPopupContent(`<strong>${a.name}</strong><br>No data available`);let o=`\n            <div style="min-width: 200px;">\n                <h3 style="margin: 0 0 8px 0;">${a.name}</h3>\n                <div style="font-size: 22px; font-weight: bold; color: ${this.getAQIColor(e.aqi)};">\n                    AQI: ${e.aqi}\n                </div>\n                <div style="font-size: 14px; margin-top: 5px;">\n                    ${this.getAQIStatus(e.aqi).text}\n                </div>\n                <hr style="margin: 10px 0;">\n                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 8px;">\n                    <div>PM2.5: ${e.pm25}</div>\n                    <div>PM10: ${e.pm10}</div>\n                    <div>SO₂: ${e.so2}</div>\n                    <div>O₃: ${e.o3}</div>\n                    <div>CO: ${e.co}</div>\n                    <div>NO₂: ${e.no2}</div>\n                    <div>NH₃: ${e.nh3}</div>\n                </div>\n                <hr style="margin: 10px 0;">\n                <button\n                    onclick="AQIMap.updateUIWithLocationData('${t}')"\n                    style="padding: 5px 10px; background: #4361ee; color: white; border: none; border-radius: 4px; cursor: pointer; width: 100%;"\n                >\n                    Show in Dashboard\n                </button>\n            </div>\n        `;this.markers[t].setPopupContent(o)},fetchSensorData:function(){$.ajax({url:window.location.pathname,type:"GET",dataType:"json",headers:{"X-Requested-With":"XMLHttpRequest"},success:t=>{if(t.lora_v1&&t.lora_v1.latest_item&&(this.sensorData["lora-v1"]={aqi:t.lora_v1.highest_sub_index,pm25:parseFloat(t.lora_v1.latest_item.pm25||0),pm10:parseFloat(t.lora_v1.latest_item.pm10||0),so2:parseFloat(t.lora_v1.latest_item.so2||0),o3:parseFloat(t.lora_v1.latest_item.o3||0),co:parseFloat(t.lora_v1.latest_item.co||0),no2:parseFloat(t.lora_v1.latest_item.no2||0),nh3:parseFloat(t.lora_v1.latest_item.nh3||0)},this.updateMarkerPopup("lora-v1")),t.loradev2&&t.loradev2.latest_item&&(this.sensorData.loradev2={aqi:t.loradev2.highest_sub_index,pm25:parseFloat(t.loradev2.latest_item.pm25||0),pm10:parseFloat(t.loradev2.latest_item.pm10||0),so2:parseFloat(t.loradev2.latest_item.so2||0),o3:parseFloat(t.loradev2.latest_item.o3||0),co:parseFloat(t.loradev2.latest_item.co||0),no2:parseFloat(t.loradev2.latest_item.no2||0),nh3:parseFloat(t.loradev2.latest_item.nh3||0)},this.updateMarkerPopup("loradev2")),t.forecast_data&&(this.forecastData=t.forecast_data,this.updateForecastChart(),this.updateForecastVisuals()),this.generateSimulatedData(),this.isTrackingLocation&&this.userLocationMarker&&this.updateUserLocationDataWithIDW(),Object.keys(this.sensorData).length>0){const t=Object.keys(this.sensorData)[0];this.updateUIWithLocationData(t)}},error:(t,e,a)=>{console.error("AJAX error:",a),this.generateSimulatedData()}})},generateSimulatedData:function(){let t=50,e=null;this.sensorData["lora-v1"]?(t=this.sensorData["lora-v1"].aqi,e=this.sensorData["lora-v1"]):this.sensorData.loradev2&&(t=this.sensorData.loradev2.aqi,e=this.sensorData.loradev2),e?(this.sensorData.location2=this.generateSimulatedReading(e,1.1),this.updateMarkerPopup("location2"),this.sensorData.location3=this.generateSimulatedReading(e,.9),this.updateMarkerPopup("location3"),this.sensorData.location4=this.generateSimulatedReading(e,1.05),this.updateMarkerPopup("location4")):(this.sensorData.location2=this.generateDefaultReading(55),this.updateMarkerPopup("location2"),this.sensorData.location3=this.generateDefaultReading(45),this.updateMarkerPopup("location3"),this.sensorData.location4=this.generateDefaultReading(65),this.updateMarkerPopup("location4"),this.sensorData["lora-v1"]=this.generateDefaultReading(50),this.updateMarkerPopup("lora-v1"),this.sensorData.loradev2=this.generateDefaultReading(60),this.updateMarkerPopup("loradev2"))},generateSimulatedReading:function(t,e){const a={};for(const[o,i]of Object.entries(t))a[o]="number"==typeof i?Math.round(i*e*10)/10:i;return a},generateDefaultReading:function(t){const e=t/100;return{aqi:t,pm25:Math.round(20*e*10)/10,pm10:Math.round(35*e*10)/10,so2:Math.round(7*e*10)/10,o3:Math.round(40*e*10)/10,co:Math.round(1.5*e*10)/10,no2:Math.round(18*e*10)/10,nh3:Math.round(15*e*10)/10}},updateUIWithLocationData:function(t){const e=this.sensorData[t];if(!e)return;const a=this.sensorLocations[t]?this.sensorLocations[t].name:"Unknown",o=this.getAQIStatus(e.aqi);$("#latest_aqi").text(e.aqi).css("color",o.color),$("#aqi-status").text(o.text+" Air Quality"),$("#status-aqi").text(e.aqi),$("#status-text").text(o.text),$(".current-aqi").css("background-color",o.color+"20"),$("#status-aqi").css("color",o.color),$("#latest_pm25").text(e.pm25),$("#latest_pm10").text(e.pm10),$("#latest_so2").text(e.so2),$("#latest_o3").text(e.o3),$("#latest_co").text(e.co),$("#latest_no2").text(e.no2),$("#latest_nh3").text(e.nh3),$("#date").text(`${a} - ${(new Date).toLocaleString()}`),this.updateHealthRecommendations(e.aqi)},getAQIStatus:function(t){return t<=50?{text:"Good",color:"#00e400"}:t<=100?{text:"Moderate",color:"#ffb700"}:t<=150?{text:"Unhealthy",color:"#ff7e00"}:t<=200?{text:"Severe",color:"#ff0000"}:t<=300?{text:"Very Severe",color:"#8F3F97"}:{text:"Hazardous",color:"#7E0023"}},getAQIColor:function(t){return this.getAQIStatus(t).color},updateHealthRecommendations:function(t){const e=$(".health-tips .tip-content");t<=50?($(e[0]).text("Outdoor activities are safe for all individuals."),$(e[1]).text("Air quality is good, no special precautions needed."),$(e[2]).text("Enjoy outdoor activities and ventilate your home.")):t<=100?($(e[0]).text("Outdoor activities are safe for most individuals."),$(e[1]).text("Unusually sensitive people should consider limiting prolonged outdoor exertion."),$(e[2]).text("Open windows during cooler parts of the day for ventilation.")):t<=150?($(e[0]).text("Active children and adults should limit prolonged outdoor exertion."),$(e[1]).text("People with respiratory issues should avoid outdoor activities."),$(e[2]).text("Keep windows closed and use air purifiers if available.")):t<=200?($(e[0]).text("Everyone should avoid prolonged outdoor exertion."),$(e[1]).text("People with respiratory issues should remain indoors."),$(e[2]).text("Keep windows closed and use HEPA air purifiers indoors.")):($(e[0]).text("Everyone should avoid all outdoor activities."),$(e[1]).text("Stay indoors and reduce physical exertion."),$(e[2]).text("Keep all windows closed and use air purifiers if available."))},initForecastChart:function(){const t=document.getElementById("forecastChart").getContext("2d");this.chart=new Chart(t,{type:"line",data:{labels:[],datasets:[{label:"Loading...",data:[],borderColor:"#4361ee",backgroundColor:"rgba(67, 97, 238, 0.2)",tension:.3,fill:!0}]},options:{responsive:!0,maintainAspectRatio:!1,plugins:{legend:{display:!1},tooltip:{mode:"index",intersect:!1,callbacks:{label:function(t){return t.dataset.label+": "+t.raw+" μg/m³"}},backgroundColor:"rgba(0, 0, 0, 0.7)",padding:10,cornerRadius:4}},scales:{y:{beginAtZero:!1,title:{display:!0,text:"μg/m³"},grid:{color:"rgba(0, 0, 0, 0.05)"}},x:{grid:{color:"rgba(0, 0, 0, 0.05)"}}},elements:{point:{radius:4,hoverRadius:6},line:{borderWidth:2}},interaction:{mode:"index",intersect:!1}}}),document.querySelectorAll(".parameter-btn").forEach((t=>{t.addEventListener("click",(()=>{document.querySelectorAll(".parameter-btn").forEach((t=>{t.classList.remove("active")})),t.classList.add("active"),this.currentParameter=t.getAttribute("data-param"),this.updateForecastChart(),this.updateForecastVisuals()}))}))},updateForecastChart:function(){if(!this.forecastData||!this.chart)return;const t=this.currentParameter,e={pm25:"rgba(247, 37, 133, 1)",pm10:"rgba(67, 97, 238, 1)",no2:"rgba(76, 201, 240, 1)",o3:"rgba(114, 9, 183, 1)",so2:"rgba(249, 65, 68, 1)",co:"rgba(67, 170, 139, 1)",nh3:"rgba(58, 12, 163, 1)"},a=this.forecastData.map((t=>t.day)),o=this.forecastData.map((e=>e[`${t}_max`])),i=this.WHO_LIMITS[t],n=Array(a.length).fill(i);this.chart.data.labels=a,this.chart.data.datasets=[{label:{pm25:"PM2.5",pm10:"PM10",no2:"NO₂",o3:"O₃",so2:"SO₂",co:"CO",nh3:"NH₃"}[t],data:o,backgroundColor:e[t].replace("1","0.2"),borderColor:e[t],borderWidth:2,tension:.3,pointRadius:4,pointHoverRadius:6,fill:!0},{label:"WHO Limit",data:n,borderColor:"rgba(128, 128, 128, 0.7)",borderWidth:2,borderDash:[5,5],fill:!1,pointRadius:0}],this.chart.update()},updateForecastVisuals:function(){if(!this.forecastData)return;const t=this.currentParameter,e=document.getElementById("forecast-info");e.innerHTML="";const a={pm25:"PM2.5",pm10:"PM10",no2:"NO₂",o3:"O₃",so2:"SO₂",co:"CO",nh3:"NH₃"},o={pm25:"fa-lungs",pm10:"fa-dust",no2:"fa-smog",o3:"fa-cloud",so2:"fa-industry",co:"fa-car",nh3:"fa-flask"},i=Math.min(this.forecastData.length,5);for(let n=0;n<i;n++){const i=this.forecastData[n],s=i[`${t}_max`],r=new Date(i.day).toLocaleDateString("en-US",{weekday:"short"}),l=this.WHO_LIMITS[t];let c="text-success";s>1.5*l?c="text-danger":s>l&&(c="text-warning");const d=document.createElement("div");d.className="forecast-day",d.innerHTML=`\n                <div class="forecast-date">${r}</div>\n                <div class="forecast-icon">\n                    <i class="fas ${o[t]}"></i>\n                </div>\n                <div class="forecast-value ${c}">${s}</div>\n                <div class="forecast-label">${a[t]}</div>\n            `,e.appendChild(d)}},startLocationTracking:function(){if(!this.isOtpVerified)return void this.showLoginModal();if(!navigator.geolocation)return void this.showNotification("Geolocation is not supported by your browser","error");this.isTrackingLocation=!this.isTrackingLocation;const t=document.getElementById("location-btn");t&&(this.isTrackingLocation?t.classList.add("active"):t.classList.remove("active")),this.isTrackingLocation?this.trackUserLocation():(this.userLocationMarker&&(this.map.removeLayer(this.userLocationMarker),this.userLocationMarker=null),this.userLocationCircle&&(this.map.removeLayer(this.userLocationCircle),this.userLocationCircle=null))},trackUserLocation:function(){if(!this.isTrackingLocation)return;const t=this;navigator.geolocation.getCurrentPosition((e=>{const a=e.coords.latitude,o=e.coords.longitude,i=e.coords.accuracy,n=L.latLng(a,o);t.userLocationMarker?(t.userLocationMarker.setLatLng(n),t.userLocationCircle.setLatLng(n),t.userLocationCircle.setRadius(i/2),t.updateUserLocationDataWithIDW()):(t.userLocationMarker=L.marker(n,{icon:L.divIcon({className:"user-location-marker",html:'<div class="pulse"></div>',iconSize:[16,16],iconAnchor:[8,8]})}).addTo(t.map),t.userLocationMarker.bindPopup("Your location"),t.userLocationCircle=L.circle(n,{radius:i/2,color:"#4361ee",fillColor:"#4361ee",fillOpacity:.15,weight:1}).addTo(t.map),t.map.setView(n,16),t.updateUserLocationDataWithIDW()),setTimeout((()=>{t.trackUserLocation()}),7e4)}),(e=>{console.error("Error getting location:",e.message),t.isTrackingLocation=!1;const a=document.getElementById("location-btn");a&&a.classList.remove("active"),t.showNotification(`Error getting your location: ${e.message}`,"error")}),{enableHighAccuracy:!0,timeout:5e3,maximumAge:0})},updateUserLocationDataWithIDW:function(){if(!this.userLocationMarker)return;const t=this.userLocationMarker.getLatLng().lat,e=this.userLocationMarker.getLatLng().lng,a=this.IDW.interpolateAllParameters(t,e,this.sensorData),o={};let i=0,n=0,s="no_data",r=0;for(const[t,e]of Object.entries(a))null!==e.value&&(o[t]=e.value,i+=e.confidence,n++,s=e.method,r=Math.max(r,e.sensorsUsed));const l=n>0?i/n:0;if(0===n)return void this.userLocationMarker.setPopupContent('\n                <div style="text-align: center; min-width: 200px;">\n                    <strong>Your Location</strong>\n                    <hr>\n                    <div style="color: #e53e3e;">\n                        <i class="fas fa-exclamation-circle"></i> No sensor data available\n                    </div>\n                    <div style="font-size: 12px; margin-top: 5px;">\n                        Please move closer to a sensor location\n                    </div>\n                </div>\n            ');const c=this.getAQIStatus(o.aqi);let d="";switch(s){case"exact":d="Exact sensor reading";break;case"single_sensor":d=`Nearest sensor data (${a.aqi.sensorsUsed} sensor)`;break;case"idw":d=`IDW interpolation (${r} sensors)`;break;default:d="Calculated"}let u="text-success",h="High";l<.3?(u="text-danger",h="Low"):l<.7&&(u="text-warning",h="Medium"),this.userLocationMarker.setPopupContent(`\n            <div style="text-align: center; min-width: 220px;">\n                <strong>Your Location</strong>\n                <span class="idw-status">IDW</span>\n                <div style="font-size: 22px; font-weight: bold; color: ${c.color}; margin-top: 5px;">\n                    AQI: ${o.aqi}\n                </div>\n                <div style="font-size: 14px; margin-top: 2px;">\n                    ${c.text}\n                </div>\n                <div style="font-size: 11px; color: #666; margin-top: 5px;">\n                    ${d}\n                </div>\n                <div style="font-size: 10px; color: #666; margin-top: 2px;">\n                    Confidence: <span class="${u}">${h}</span> (${Math.round(100*l)}%)\n                </div>\n                <hr style="margin: 8px 0;">\n                <div style="font-size: 12px; text-align: left; display: grid; grid-template-columns: 1fr 1fr; gap: 4px;">\n                    <div>PM2.5: ${o.pm25}</div>\n                    <div>PM10: ${o.pm10}</div>\n                    <div>SO₂: ${o.so2}</div>\n                    <div>O₃: ${o.o3}</div>\n                    <div>CO: ${o.co}</div>\n                    <div>NO₂: ${o.no2}</div>\n                    <div>NH₃: ${o.nh3}</div>\n                </div>\n                <button\n                    onclick="AQIMap.updateUIWithUserLocationData()"\n                    style="padding: 5px; margin-top: 8px; background: #4361ee; color: white; border: none; border-radius: 4px; cursor: pointer; width: 100%;"\n                >\n                    Show in Dashboard\n                </button>\n            </div>\n        `),this.userLocationData={...o,name:"Your Location",method:s,confidence:l,sensorsUsed:r},this.map.hasLayer(this.userLocationMarker._popup)&&this.userLocationMarker._popup.update()},updateUIWithUserLocationData:function(){if(!this.userLocationData)return;const t=this.getAQIStatus(this.userLocationData.aqi);$("#latest_aqi").text(this.userLocationData.aqi).css("color",t.color),$("#aqi-status").text(t.text+" Air Quality"),$("#status-aqi").text(this.userLocationData.aqi),$("#status-text").text(t.text),$(".current-aqi").css("background-color",t.color+"20"),$("#status-aqi").css("color",t.color),$("#latest_pm25").text(this.userLocationData.pm25),$("#latest_pm10").text(this.userLocationData.pm10),$("#latest_so2").text(this.userLocationData.so2),$("#latest_o3").text(this.userLocationData.o3),$("#latest_co").text(this.userLocationData.co),$("#latest_no2").text(this.userLocationData.no2),$("#latest_nh3").text(this.userLocationData.nh3);let e="";"idw"===this.userLocationData.method?e=` (IDW with ${this.userLocationData.sensorsUsed} sensors)`:"single_sensor"===this.userLocationData.method&&(e=" (Nearest sensor)"),$("#date").text(`Your Location${e} - ${(new Date).toLocaleString()}`),this.updateHealthRecommendations(this.userLocationData.aqi),this.isPanelCollapsed&&this.toggleDetailsPanel(),"idw"===this.userLocationData.method&&this.showNotification(`Air quality interpolated using ${this.userLocationData.sensorsUsed} nearby sensors`,"info")},toggleCoverage:function(){this.isCoverageVisible=!this.isCoverageVisible;const t=document.getElementById("coverage-btn");t&&(this.isCoverageVisible?t.classList.add("active"):t.classList.remove("active"));for(const[t,e]of Object.entries(this.coverageCircles))this.isCoverageVisible?e.addTo(this.map):e.remove()},showLoginModal:function(){document.getElementById("login-modal").style.display="flex"},hideLoginModal:function(){document.getElementById("login-modal").style.display="none"},showOtpModal:function(){document.getElementById("otp-modal").style.display="flex"},hideOtpModal:function(){document.getElementById("otp-modal").style.display="none"},initModalHandlers:function(){document.getElementById("close-login-modal-btn").addEventListener("click",(()=>{this.hideLoginModal()})),document.getElementById("close-otp-modal-btn").addEventListener("click",(()=>{this.hideOtpModal()}));"true"===new URLSearchParams(window.location.search).get("verify_otp")&&this.showOtpModal()},showNotification:function(t,e="info"){const a=document.getElementById("notification");document.getElementById("notification-text").textContent=t,a.className="notification notification-"+e,a.classList.add("show"),setTimeout((()=>{a.classList.remove("show")}),5e3)},addMapControls:function(){document.getElementById("zoom-in-btn").addEventListener("click",(()=>{this.map.zoomIn()})),document.getElementById("zoom-out-btn").addEventListener("click",(()=>{this.map.zoomOut()}));const t=document.getElementById("location-btn");t&&t.addEventListener("click",(()=>{this.isOtpVerified?this.startLocationTracking():this.showLoginModal()}));const e=document.getElementById("coverage-btn");e&&e.addEventListener("click",(()=>{this.toggleCoverage()}))}};$(document).ready((function(){try{AQIMap.init()}catch(t){console.error("Error initializing AQI Map:",t)}}));